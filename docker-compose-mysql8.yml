
services:
  db_:
    image: mysql:8.0
    container_name: mysql8.0
    cpus: '1.0'
    mem_limit: 1G
    restart: always
    ports:
      - '3306:3306'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    networks: 
      - service_backend
    volumes:
      - ./my8.0_config:/etc/mysql/conf.d  # 映射本地配置文件到容器中的my.cnf
      - ./my8.0_data:/var/lib/mysql
      - ./dump_data:/dump_data
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
      
  redis_:
    depends_on:
      - db_
    image: "redis:6-alpine"
    container_name: redis6.0
    cpus: '0.25'         # 限制使用 25% 的 CPU
    mem_limit: 256M      # 限制內存上限為 256MB
    restart: always
    networks: 
      - service_backend
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  service_backend:
    name: service_backend
    external: true
      
volumes:
  db_data: {}
